// Mixins

// Global UI Transition
@mixin transition($property) {
  transition-duration: $transition-duration;
  transition-timing-function: $transition-easing;
  transition-property: $property;
}

// Ye olde clearfix
@mixin clearfix {
  &:after {
    content: '';
    clear: both;
    display: table;
  }
}

// Animated white bg hover for user-content links
@mixin inline-link($hover-bg:'red', $hover-color:'white') {
  background-color: rgba(color($hover-bg), 0);
  transition: all 0.1s;

  &:hover,
  &:focus {
    color: color($hover-color);
    border-color: color($hover-color);
    background-color: rgba(color($hover-bg), 1);
    box-shadow: .2em .1em 0 rgba(color($hover-bg), 1), -.2em .1em 0 rgba(color($hover-bg), 1), -.2em 0 0 rgba(color($hover-bg), 1), .2em 0 0 rgba(color($hover-bg), 1);
    svg {
      fill: color($hover-color);
    }
  }
}

// Link Hover
@mixin linkHover($color, $blendMode: multiply) {
  &:hover,
  &:focus {
    color: color('black');
    background-color: $color;
    mix-blend-mode: $blendMode;
  }
}

// Button Styles
@mixin button($primary, $secondary) {
  color: $secondary;
  border: 1px solid $primary;
  background-color: $primary;
  transition: all 0.1s;
  cursor: pointer;

  svg {
    transition: all 0.1s;
    fill: $secondary;
  }

  &:hover,
  &:focus {
    outline: none;
    color: $primary;
    border-color: $secondary;
    background-color: $secondary;

    svg {
      fill: $primary;
    }
  }
}

@mixin buttonHollow($primary, $secondary) {
  color: $primary;
  border-color: $primary;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.1s;

  svg {
    transition: fill 0.1s;
    transition: fill 0.1s;
    fill: $primary;
  }

  &:hover,
  &:focus {
    color: $secondary;
    border-color: $primary;
    background-color: $primary;

    svg {
      fill: $secondary;
    }
  }
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res - 1px) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}
